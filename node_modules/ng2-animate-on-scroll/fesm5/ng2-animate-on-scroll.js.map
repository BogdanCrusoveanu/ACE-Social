{"version":3,"file":"ng2-animate-on-scroll.js","sources":["ng://ng2-animate-on-scroll/lib/scroll.service.ts","ng://ng2-animate-on-scroll/lib/animate-on-scroll.directive.ts","ng://ng2-animate-on-scroll/lib/animate-on-scroll.module.ts","ng://ng2-animate-on-scroll/ng2-animate-on-scroll.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, empty, fromEvent } from 'rxjs';\n\n@Injectable()\nexport class ScrollService implements OnDestroy {\n\n  scrollObs: Observable<any>;\n  resizeObs: Observable<any>;\n  pos: number;\n  private scrollSub: Subscription = new Subscription();\n  private resizeSub: Subscription = new Subscription();\n\n  constructor() {\n\n    // set initial value\n    this.manageScrollPos();\n\n    // create observable that we can subscribe to from component or directive\n    this.scrollObs = typeof window !== 'undefined' ? fromEvent(window, 'scroll') : empty();\n\n    // initiate subscription to update values\n    this.scrollSub = this.scrollObs\n      .subscribe(() => this.manageScrollPos());\n\n    // create observable for changes in screen size\n    this.resizeObs = typeof window !== 'undefined' ? fromEvent(window, 'resize') : empty();\n\n    // initiate subscription to update values\n    this.resizeSub = this.resizeObs\n      .subscribe(() => this.manageScrollPos());\n\n  }\n\n\n  private manageScrollPos(): void {\n\n    // update service property\n    this.pos = typeof window !== 'undefined' ? window.pageYOffset : 0;\n\n  }\n\n  ngOnDestroy(): void {\n    this.scrollSub.unsubscribe();\n    this.resizeSub.unsubscribe();\n  }\n\n}\n","import { Directive, Input, Renderer2, ElementRef, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport { ScrollService } from './scroll.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[animateOnScroll]'\n})\nexport class AnimateOnScrollDirective implements OnInit, OnDestroy, AfterViewInit {\n\n  private offsetTop: number;\n  private isVisible: boolean;\n  private winHeight: number;\n  private scrollSub: Subscription = new Subscription();\n  private resizeSub: Subscription = new Subscription();\n\n  private get id(): string {\n    return this.elementRef.nativeElement.id;\n  }\n\n  @Input() animationName: string; // use fadeIn as default if not specified\n  // Pixel offset from screen bottom to the animated element to determine the start of the animation\n  @Input() offset: number = 80;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2, private scroll: ScrollService) { }\n\n  ngOnInit(): void {\n    if (!this.animationName) {\n      throw new Error('animationName required');\n    }\n    // default visibility to false\n    this.isVisible = false;\n\n    // subscribe to scroll event using service\n    this.scrollSub = this.scroll.scrollObs\n      .subscribe(() => this.manageVisibility());\n\n    // subscribe to resize event using service so scrolling position is always accurate\n    this.resizeSub = this.scroll.resizeObs\n      .subscribe(() => this.manageVisibility());\n\n  }\n\n  ngAfterViewInit(): void {\n    // run visibility check initially in case the element is already visible in viewport\n    setTimeout(() => this.manageVisibility(), 1);\n  }\n\n  ngOnDestroy(): void {\n    this.scrollSub.unsubscribe();\n    this.resizeSub.unsubscribe();\n  }\n\n  /**\n   * check for visibility of element in viewport to add animation\n   *\n   * @returns void\n   */\n  private manageVisibility(): void {\n\n    if (this.isVisible) {\n      // Optimisation; nothing to do if class has already been applied\n      return;\n    }\n\n    // check for window height, may change with a window resize\n    this.getWinHeight();\n\n    // get vertical position for selected element\n    this.getOffsetTop();\n\n    // we should trigger the addition of the animation class a little after getting to the element\n    const scrollTrigger = this.offsetTop + this.offset - this.winHeight;\n\n    // using values updated in service\n    if (this.scroll.pos >= scrollTrigger) {\n      this.addAnimationClass();\n    }\n\n  }\n\n  /**\n   * utility function to mark element visible and add css class\n   *\n   * @returns void\n   */\n  private addAnimationClass(): void {\n\n    // mark this element visible, we won't remove the class after this\n    this.isVisible = true;\n\n    // use default for animate.css if no value provided\n    this.setClass(this.animationName);\n\n  }\n\n  /**\n   * utility function to add one or more css classes to element in DOM\n   *\n   * @param  {string} classes\n   * @returns void\n   */\n  private setClass(classes: string): void {\n\n    for (const c of classes.split(' ')) {\n      this.renderer.addClass(this.elementRef.nativeElement, c);\n    }\n\n  }\n\n  /**\n   * get window height utility function\n   *\n   * @returns void\n   */\n  private getWinHeight(): void {\n\n    this.winHeight = typeof window !== 'undefined' ?  window.innerHeight : 0;\n\n  }\n\n  /**\n   * get offsetTop value for element\n   *\n   * @returns void\n   */\n  private getOffsetTop(): void {\n    if (typeof this.elementRef.nativeElement.getBoundingClientRect === 'function') {\n      const viewportTop = this.elementRef.nativeElement.getBoundingClientRect().top;\n      const clientTop = this.elementRef.nativeElement.clientTop;\n\n      // get vertical position for selected element\n      this.offsetTop = viewportTop + this.scroll.pos - clientTop;\n    } else {\n      this.offsetTop = 0;\n    }\n\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AnimateOnScrollDirective } from './animate-on-scroll.directive';\nimport { ScrollService } from './scroll.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    AnimateOnScrollDirective\n  ],\n  exports: [\n    AnimateOnScrollDirective\n  ]\n})\nexport class AnimateOnScrollModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AnimateOnScrollModule,\n      providers: [ ScrollService ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;IAYE;QAAA,iBAmBC;QAtBO,cAAS,GAAiB,IAAI,YAAY,EAAE,CAAC;QAC7C,cAAS,GAAiB,IAAI,YAAY,EAAE,CAAC;;QAKnD,IAAI,CAAC,eAAe,EAAE,CAAC;;QAGvB,IAAI,CAAC,SAAS,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,KAAK,EAAE,CAAC;;QAGvF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;aAC5B,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,eAAe,EAAE,GAAA,CAAC,CAAC;;QAG3C,IAAI,CAAC,SAAS,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,KAAK,EAAE,CAAC;;QAGvF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;aAC5B,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,eAAe,EAAE,GAAA,CAAC,CAAC;KAE5C;IAGO,uCAAe,GAAvB;;QAGE,IAAI,CAAC,GAAG,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;KAEnE;IAED,mCAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;KAC9B;IAxCU,aAAa;QADzB,UAAU,EAAE;OACA,aAAa,CA0CzB;IAAD,oBAAC;CA1CD;;;ICmBE,kCAAoB,UAAsB,EAAU,QAAmB,EAAU,MAAqB;QAAlF,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAAU,WAAM,GAAN,MAAM,CAAe;QAX9F,cAAS,GAAiB,IAAI,YAAY,EAAE,CAAC;QAC7C,cAAS,GAAiB,IAAI,YAAY,EAAE,CAAC;;QAQ5C,WAAM,GAAW,EAAE,CAAC;KAE8E;IAR3G,sBAAY,wCAAE;aAAd;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC;SACzC;;;OAAA;IAQD,2CAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;SAC3C;;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;;QAGvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS;aACnC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,gBAAgB,EAAE,GAAA,CAAC,CAAC;;QAG5C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS;aACnC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,gBAAgB,EAAE,GAAA,CAAC,CAAC;KAE7C;IAED,kDAAe,GAAf;QAAA,iBAGC;;QADC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,gBAAgB,EAAE,GAAA,EAAE,CAAC,CAAC,CAAC;KAC9C;IAED,8CAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;KAC9B;;;;;;IAOO,mDAAgB,GAAxB;QAEE,IAAI,IAAI,CAAC,SAAS,EAAE;;YAElB,OAAO;SACR;;QAGD,IAAI,CAAC,YAAY,EAAE,CAAC;;QAGpB,IAAI,CAAC,YAAY,EAAE,CAAC;;QAGpB,IAAM,aAAa,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;;QAGpE,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,aAAa,EAAE;YACpC,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;KAEF;;;;;;IAOO,oDAAiB,GAAzB;;QAGE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;QAGtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAEnC;;;;;;;IAQO,2CAAQ,GAAhB,UAAiB,OAAe;;;YAE9B,KAAgB,IAAA,KAAA,SAAA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA,gBAAA,4BAAE;gBAA/B,IAAM,CAAC,WAAA;gBACV,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;aAC1D;;;;;;;;;KAEF;;;;;;IAOO,+CAAY,GAApB;QAEE,IAAI,CAAC,SAAS,GAAG,OAAO,MAAM,KAAK,WAAW,GAAI,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;KAE1E;;;;;;IAOO,+CAAY,GAApB;QACE,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,qBAAqB,KAAK,UAAU,EAAE;YAC7E,IAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,GAAG,CAAC;YAC9E,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC;;YAG1D,IAAI,CAAC,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC;SAC5D;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACpB;KAEF;;gBAjH+B,UAAU;gBAAoB,SAAS;gBAAkB,aAAa;;IAJ7F;QAAR,KAAK,EAAE;mEAAuB;IAEtB;QAAR,KAAK,EAAE;4DAAqB;IAdlB,wBAAwB;QAHpC,SAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;SAC9B,CAAC;OACW,wBAAwB,CAmIpC;IAAD,+BAAC;CAnID;;;ICSA;KAOC;8BAPY,qBAAqB;IACzB,6BAAO,GAAd;QACE,OAAO;YACL,QAAQ,EAAE,uBAAqB;YAC/B,SAAS,EAAE,CAAE,aAAa,CAAE;SAC7B,CAAC;KACH;;IANU,qBAAqB;QAXjC,QAAQ,CAAC;YACR,OAAO,EAAE;gBACP,YAAY;aACb;YACD,YAAY,EAAE;gBACZ,wBAAwB;aACzB;YACD,OAAO,EAAE;gBACP,wBAAwB;aACzB;SACF,CAAC;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAPD;;AChBA;;GAEG;;;;"}